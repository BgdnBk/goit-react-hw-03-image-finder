{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Button/Button.js","components/Loader/Loader.js","Servises/pixabey-api.js","App.js","index.js"],"names":["Searchbar","state","nameImg","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","tags","largeImageURL","onClick","src","alt","ImageGallery","arrImg","console","log","map","id","modalRoot","document","querySelector","Modal","exitModal","code","onClose","window","addEventListener","removeEventListener","createPortal","children","Button","loader","color","height","width","api","fetchPixabey","page","fetch","then","res","ok","json","Promise","reject","Error","App","imgArr","loading","selectedImg","modal","imgFetch","PixabeyApi","images","newArrImg","hits","catch","finally","prevState","handleFormSubmit","toggleModal","currentImg","currentImage","addMoreImg","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","btnLoadMore","prevProps","style","maxWidth","margin","padding","autoClose","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d65d45de.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    nameImg: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ nameImg: e.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.nameImg.trim() === '') {\r\n      return toast.error('Введите имя категории');\r\n    }\r\n    this.props.onSubmit(this.state.nameImg.trim());\r\n    this.setState({ nameImg: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Поиск</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.nameImg}\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function ImageGalleryItem({\r\n  webformatURL,\r\n  tags,\r\n  largeImageURL,\r\n  onClick,\r\n}) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        onClick={() => onClick(largeImageURL)}\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nexport default function ImageGallery({ arrImg, onSubmit }) {\r\n  console.log('images Gallery', arrImg);\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {arrImg.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          tags={tags}\r\n          onClick={onSubmit}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.exitModal);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.exitModal);\r\n  }\r\n  exitModal = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\">\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Button({ onClick, children }) {\r\n  return (\r\n    <div>\r\n      <button className=\"Button\" onClick={onClick}>\r\n        {children}\r\n      </button>\r\n      {/* window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n      }); */}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <Loader type=\"Rings\" color=\"#00BFFF\" height={200} width={200} />\r\n    </div>\r\n  );\r\n}\r\n","function fetchPixabey(nameImg, page) {\r\n  const URL = 'https://pixabay.com/api/';\r\n  const KEY = 'key=19126549-85d1f2f8405aa0462827313fa';\r\n\r\n  return fetch(\r\n    ` ${URL}?q=${nameImg}&page=${page}&${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(\r\n      new Error(`Изображений по такому ключевому слову не найдены |:<`),\r\n    );\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchPixabey,\r\n};\r\n\r\nexport default api;\r\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\n// import ImageGalleryItem from './components/ImageGalleryItem/ImageGalleryItem';\nimport Modal from './components/Modal/Modal';\nimport Button from './components/Button/Button';\nimport Loader from './components/Loader/Loader';\nimport PixabeyApi from './Servises/pixabey-api';\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    nameImg: '',\n    imgArr: [],\n    loading: false,\n    selectedImg: null,\n    page: 1,\n    modal: false,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevImg = prevState.nameImg;\n    const nextImg = this.state.nameImg;\n\n    if (prevImg !== nextImg) {\n      this.setState({\n        page: 1,\n        nameImg: this.state.nameImg,\n        imgArr: [],\n      });\n\n      this.imgFetch();\n    }\n  }\n\n  imgFetch = () => {\n    const { nameImg, page } = this.state;\n    this.setState({ loading: true });\n\n    PixabeyApi.fetchPixabey(nameImg, page)\n      .then(images => this.newArrImg(images.hits))\n      .catch(error => this.setState({ error }))\n      .finally(() =>\n        this.setState(prevState => ({\n          loading: false,\n          page: prevState.page + 1,\n        })),\n      );\n  };\n\n  newArrImg = images => {\n    images === []\n      ? this.setState({\n          imgArr: images,\n        })\n      : this.setState(prevState => ({\n          imgArr: [...prevState.imgArr, ...images],\n        }));\n  };\n\n  handleFormSubmit = nameImg => {\n    this.setState({ nameImg });\n  };\n\n  toggleModal = () => {\n    this.setState(({ modal }) => ({ modal: !modal }));\n  };\n\n  currentImg = (currentImage, tags) => {\n    this.setState({\n      selectedImg: [currentImage, tags],\n      modal: true,\n    });\n  };\n\n  addMoreImg = () => {\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }, 100);\n  };\n\n  btnLoadMore = () => {\n    this.imgFetch();\n    this.addMoreImg();\n  };\n\n  render() {\n    // nameImg,  ;\n    const { loading, selectedImg, imgArr, modal } = this.state;\n\n    return (\n      <div style={{ maxWidth: 1170, margin: '0 auto', padding: 20 }}>\n        <ToastContainer autoClose={3000} />\n\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery arrImg={imgArr} onSubmit={this.currentImg} />\n        {modal && (\n          <Modal onClose={() => this.toggleModal()}>\n            <img src={selectedImg[0]} alt={selectedImg[1]} />\n          </Modal>\n        )}\n\n        {imgArr.length !== 0 && (\n          <Button onClick={this.btnLoadMore}>Следующие 12 картинок</Button>\n        )}\n\n        {loading && <Loader />}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}